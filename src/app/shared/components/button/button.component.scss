@import "config";
@import "mixins";
@import "functions";

// Mixin para aplicar estilos de color a botones
// Utiliza este mixin para definir los estilos de color de los botones en la aplicación
@mixin button-color-styles {
  &:not(.neo-btn--transparent):not(.neo-btn--icon),
  &.neo-btn--icon:not(.neo-btn--transparent) {
    background-color: var(--bg-btn-color);
    border-color: var(--border-btn-color);
    color: var(--text-btn-color);

    &:hover,
    &:focus,
    &:active {
      background-color: var(--hover-btn-color);
    }

    &.neo-btn--icon i::before {
      color: var(--icon-btn-color);
    }
  }

  // Botones transparentes (con texto o icono)
  &.neo-btn--transparent {
    background-color: transparent;
    border-color: transparent;
    color: var(--text-btn-transparent-color);

    &:hover,
    &:focus,
    &:active {
      background-color: var(--hover-bg-btn-transparent-color);
    }

    i::before {
      color: var(--icon-btn-transparent-color);
    }
  }
}

:host {
  display: inline-block;
  cursor: pointer;
  @include transition(opacity 0.2s ease-in-out);
}

.neo-btn {
  display: flex;
  justify-content: center;
  align-items: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  cursor: pointer;
  border-radius: var(--border-radius-md);
  font-weight: var(--font-weight-medium);
  text-decoration: none;
  @include transition(all 0.2s ease-in-out);
  transition: box-shadow 0.2s ease;
  font-family: var(--font-family-base);

  &:focus,
  &:active {
    @include outline-focus;
  }

  // Clases de tamaño que usan el mixin component-size
  &--xs {
    @include component-size(xs);
    font-weight: var(--component-font-weight-xs);
  }
  &--s {
    @include component-size(s);
    font-weight: var(--component-font-weight-s);
  }
  &--xm {
    @include component-size(xm);
    font-weight: var(--component-font-weight-xm);
  }
  &--m {
    @include component-size(m);
    font-weight: var(--component-font-weight-m);
  }
  &--l {
    @include component-size(l);
    font-weight: var(--component-font-weight-l);
  }
  &--xl {
    @include component-size(xl);
    font-weight: var(--component-font-weight-xl);
  }

  &--all-width {
    width: 100%;
  }

  span,
  p,
  div {
    overflow: hidden;
    white-space: nowrap;
    display: block;
    text-overflow: ellipsis;
  }

  i {
    font-size: var(--font-size-base);
    line-height: 1;
    &:not(:last-child) {
      margin-right: var(--spacing-xxs);
    }
    &:not(:first-child) {
      margin-left: var(--spacing-xxs);
    }
  }

  &:not(&--transparent) {
    border-width: var(--border-width-base);
    border-style: solid;
    box-shadow: var(--box-shadow-s);

    &:hover {
      box-shadow: var(--box-shadow-button-hover);
    }

    &:active {
      box-shadow: var(--box-shadow-button-hover);
    }
  }

  &--icon {
    box-shadow: none;
    width: auto;
    min-width: unset;
    padding: 0;

    i {
      margin: 0;
    }

    // Ajuste de tamaño para botones de icono
    // Usamos las variables CSS de component-height y component-font-size
    &.neo-btn--xs {
      height: var(--component-height-xs);
      width: var(--component-height-xs);
      i {
        font-size: var(--component-font-size-xs);
      }
    }
    &.neo-btn--s {
      height: var(--component-height-s);
      width: var(--component-height-s);
      i {
        font-size: var(--component-font-size-s);
      }
    }
    &.neo-btn--xm {
      height: var(--component-height-xm);
      width: var(--component-height-xm);
      i {
        font-size: var(--component-font-size-xm);
      }
    }
    &.neo-btn--m {
      height: var(--component-height-m);
      width: var(--component-height-m);
      i {
        font-size: var(--component-font-size-m);
      }
    }
    &.neo-btn--l {
      height: var(--component-height-l);
      width: var(--component-height-l);
      i {
        font-size: var(--component-font-size-l);
      }
    }
    &.neo-btn--xl {
      height: var(--component-height-xl);
      width: var(--component-height-xl);
      i {
        font-size: var(--component-font-size-xl);
      }
    }
  }

  &--transparent {
    box-shadow: none;
    background-color: transparent;
    border-color: transparent;

    &:hover,
    &:active {
      box-shadow: none;
    }
  }

  // ====================================================================
  // Definiciones de color para cada modo (primary, secondary, etc.)
  // Ahora, cada bloque de color define las variables CSS específicas para ese modo.
  // El mixin `button-color-styles` leerá estas variables.
  // ====================================================================

  &--primary {
    --bg-btn-color: var(--bg-btn-primary-color);
    --border-btn-color: var(--border-btn-primary-color);
    --text-btn-color: var(--text-btn-primary-color);
    --hover-btn-color: var(--hover-btn-primary-color);
    --text-btn-transparent-color: var(--text-btn-primary-transparent-color);
    --icon-btn-color: var(--icon-btn-primary-color);
    --icon-btn-transparent-color: var(--icon-btn-primary-transparent-color);
    --hover-bg-btn-transparent-color: var(
      --hover-bg-btn-primary-transparent-color
    );
    @include button-color-styles;
  }

  &--secondary {
    --bg-btn-color: var(--bg-btn-secondary-color);
    --border-btn-color: var(--border-btn-secondary-color);
    --text-btn-color: var(--text-btn-secondary-color);
    --hover-btn-color: var(--hover-btn-secondary-color);
    --text-btn-transparent-color: var(--text-btn-secondary-transparent-color);
    --icon-btn-color: var(--icon-btn-secondary-color);
    --icon-btn-transparent-color: var(--icon-btn-secondary-transparent-color);
    --hover-bg-btn-transparent-color: var(
      --hover-bg-btn-secondary-transparent-color
    );
    @include button-color-styles;
  }

  &--success {
    --bg-btn-color: var(--bg-btn-success-color);
    --border-btn-color: var(--border-btn-success-color);
    --text-btn-color: var(--text-btn-success-color);
    --hover-btn-color: var(--hover-btn-success-color);
    --text-btn-transparent-color: var(--text-btn-success-transparent-color);
    --icon-btn-color: var(--icon-btn-success-color);
    --icon-btn-transparent-color: var(--icon-btn-success-transparent-color);
    --hover-bg-btn-transparent-color: var(
      --hover-bg-btn-success-transparent-color
    );
    @include button-color-styles;
  }

  &--info {
    --bg-btn-color: var(--bg-btn-info-color);
    --border-btn-color: var(--border-btn-info-color);
    --text-btn-color: var(--text-btn-info-color);
    --hover-btn-color: var(--hover-btn-info-color);
    --text-btn-transparent-color: var(--text-btn-info-transparent-color);
    --icon-btn-color: var(--icon-btn-info-color);
    --icon-btn-transparent-color: var(--icon-btn-info-transparent-color);
    --hover-bg-btn-transparent-color: var(
      --hover-bg-btn-info-transparent-color
    );
    @include button-color-styles;
  }

  &--danger {
    --bg-btn-color: var(--bg-btn-danger-color);
    --border-btn-color: var(--border-btn-danger-color);
    --text-btn-color: var(--text-btn-danger-color);
    --hover-btn-color: var(--hover-btn-danger-color);
    --text-btn-transparent-color: var(--text-btn-danger-transparent-color);
    --icon-btn-color: var(--icon-btn-danger-color);
    --icon-btn-transparent-color: var(--icon-btn-danger-transparent-color);
    --hover-bg-btn-transparent-color: var(
      --hover-bg-btn-danger-transparent-color
    );
    @include button-color-styles;
  }

  &--warning {
    --bg-btn-color: var(--bg-btn-warning-color);
    --border-btn-color: var(--border-btn-warning-color);
    --text-btn-color: var(--text-btn-warning-color);
    --hover-btn-color: var(--hover-btn-warning-color);
    --text-btn-transparent-color: var(--text-btn-warning-transparent-color);
    --icon-btn-color: var(--icon-btn-warning-color);
    --icon-btn-transparent-color: var(--icon-btn-warning-transparent-color);
    --hover-bg-btn-transparent-color: var(
      --hover-bg-btn-warning-transparent-color
    );
    @include button-color-styles;
  }

  &--disabled {
    @include disabled; // Ya modificado para usar variables CSS
  }
}
