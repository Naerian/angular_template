// src/app/shared/components/button/button.component.scss

@import "config";
@import "mixins";
@import "functions";

// Mixin para aplicar estilos de color a botones
// Utiliza este mixin para definir los estilos de color de los botones en la aplicaci√≥n
@mixin button-color-styles(
  $bg,
  $border,
  $text,
  $hover-bg,
  $transparent-text,
  $icon-solid,
  $icon-transparent,
  $hover-bg-transparent
) {
  &:not(.neo-btn--transparent):not(.neo-btn--icon),
  &.neo-btn--icon:not(.neo-btn--transparent) {
    background-color: $bg;
    border-color: $border;
    color: $text;

    &:hover,
    &:focus,
    &:active {
      background-color: $hover-bg;
    }

    &.neo-btn--icon i::before {
      color: $icon-solid;
    }
  }

  // Botones transparentes (con texto o icono)
  &.neo-btn--transparent {
    background-color: transparent;
    border-color: transparent;
    color: $transparent-text;

    &:hover,
    &:focus,
    &:active {
      background-color: $hover-bg-transparent;
    }

    i::before {
      color: $icon-transparent;
    }
  }
}

:host {
  display: inline-block;
  cursor: pointer;
  @include transition(opacity 0.2s ease-in-out);
}

[disabled],
.neo-btn--disabled {
  pointer-events: none;
  cursor: default;
  opacity: 0.6;
  filter: grayscale(30%);
}

.neo-btn {
  display: flex;
  justify-content: center;
  align-items: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  cursor: pointer;
  border-radius: $border-radius-md;
  font-weight: $font-weight-medium;
  text-decoration: none;
  @include transition(all 0.2s ease-in-out);
  transition: box-shadow 0.2s ease;
  font-family: $font-family-base;

  &:focus,
  &:active {
    @include outline-focus;
  }

  &--xs {
    @include component-size(xs);
    font-weight: $font-weight-regular;
  }
  &--s {
    @include component-size(s);
    font-weight: $font-weight-regular;
  }
  &--xm {
    @include component-size(xm);
    font-weight: $font-weight-medium;
  }
  &--m {
    @include component-size(m);
    font-weight: $font-weight-medium;
  }
  &--l {
    @include component-size(l);
    font-weight: $font-weight-semibold;
  }
  &--xl {
    @include component-size(xl);
    font-weight: $font-weight-semibold;
  }

  &--all-width {
    width: 100%;
  }

  span,
  p,
  div {
    overflow: hidden;
    white-space: nowrap;
    display: block;
    text-overflow: ellipsis;
  }

  i {
    font-size: $font-size-base;
    line-height: 1;
    &:not(:last-child) {
      margin-right: $spacing-xxs;
    }
    &:not(:first-child) {
      margin-left: $spacing-xxs;
    }
  }

  &:not(&--transparent) {
    border-width: 1px;
    border-style: solid;
    box-shadow: $box-shadow-sm;

    &:hover {
      box-shadow: $box-shadow-button-hover;
    }

    &:active {
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) inset;
    }
  }

  &--icon {
    box-shadow: none;
    width: auto;
    min-width: unset;
    padding: 0;

    i {
      margin: 0;
    }

    &.neo-btn--xs {
      height: map-get($component-heights, xs);
      width: map-get($component-heights, xs);
      i {
        font-size: map-get($component-font-sizes, xs);
      }
    }
    &.neo-btn--s {
      height: map-get($component-heights, s);
      width: map-get($component-heights, s);
      i {
        font-size: map-get($component-font-sizes, s);
      }
    }
    &.neo-btn--xm {
      height: map-get($component-heights, xm);
      width: map-get($component-heights, xm);
      i {
        font-size: map-get($component-font-sizes, xm);
      }
    }
    &.neo-btn--m {
      height: map-get($component-heights, m);
      width: map-get($component-heights, m);
      i {
        font-size: map-get($component-font-sizes, m);
      }
    }
    &.neo-btn--l {
      height: map-get($component-heights, l);
      width: map-get($component-heights, l);
      i {
        font-size: map-get($component-font-sizes, l);
      }
    }
    &.neo-btn--xl {
      height: map-get($component-heights, xl);
      width: map-get($component-heights, xl);
      i {
        font-size: map-get($component-font-sizes, xl);
      }
    }
  }

  &--transparent {
    box-shadow: none;
    background-color: transparent;
    border-color: transparent;

    &:hover,
    &:active {
      box-shadow: none;
    }
  }

  &--primary {
    @include button-color-styles(
      var(--bg-btn-primary-color),
      var(--border-btn-primary-color),
      var(--text-btn-primary-color),
      var(--hover-btn-primary-color),
      var(--text-btn-primary-transparent-color),
      var(--icon-btn-primary-color),
      var(--icon-btn-primary-transparent-color),
      var(--hover-bg-btn-primary-transparent-color)
    );
  }

  &--secondary {
    @include button-color-styles(
      var(--bg-btn-secondary-color),
      var(--border-btn-secondary-color),
      var(--text-btn-secondary-color),
      var(--hover-btn-secondary-color),
      var(--text-btn-secondary-transparent-color),
      var(--icon-btn-secondary-color),
      var(--icon-btn-secondary-transparent-color),
      var(--hover-bg-btn-secondary-transparent-color)
    );
  }

  &--success {
    @include button-color-styles(
      var(--bg-btn-success-color),
      var(--border-btn-success-color),
      var(--text-btn-success-color),
      var(--hover-btn-success-color),
      var(--text-btn-success-transparent-color),
      var(--icon-btn-success-color),
      var(--icon-btn-success-transparent-color),
      var(--hover-bg-btn-success-transparent-color)
    );
  }

  &--info {
    @include button-color-styles(
      var(--bg-btn-info-color),
      var(--border-btn-info-color),
      var(--text-btn-info-color),
      var(--hover-btn-info-color),
      var(--text-btn-info-transparent-color),
      var(--icon-btn-info-color),
      var(--icon-btn-info-transparent-color),
      var(--hover-bg-btn-info-transparent-color)
    );
  }

  &--danger {
    @include button-color-styles(
      var(--bg-btn-danger-color),
      var(--border-btn-danger-color),
      var(--text-btn-danger-color),
      var(--hover-btn-danger-color),
      var(--text-btn-danger-transparent-color),
      var(--icon-btn-danger-color),
      var(--icon-btn-danger-transparent-color),
      var(--hover-bg-btn-danger-transparent-color)
    );
  }

  &--warning {
    @include button-color-styles(
      var(--bg-btn-warning-color),
      var(--border-btn-warning-color),
      var(--text-btn-warning-color),
      var(--hover-btn-warning-color),
      var(--text-btn-warning-transparent-color),
      var(--icon-btn-warning-color),
      var(--icon-btn-warning-transparent-color),
      var(--hover-bg-btn-warning-transparent-color)
    );
  }
}
