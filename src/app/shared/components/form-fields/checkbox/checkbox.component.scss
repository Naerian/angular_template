@import "config";
@import "mixins";

:host {
  @include flex-col-start;
}

.neo-checkbox {
  display: inline-flex;
  align-items: center;
  user-select: none;
  cursor: pointer;

  &--disabled {
    cursor: default;
    opacity: 0.6;
    .neo-checkbox__label {
      cursor: default;
    }
  }

  &__input {
    position: absolute;
    opacity: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    border: 0;
    padding: 0;
    clip: rect(0 0 0 0);
    overflow: hidden;
    white-space: nowrap;
  }

  &__input:focus:not([disabled]) + &__mark,
  &__input:focus-visible:not([disabled]) + &__mark,
  &__input:active:not([disabled]) + &__mark {
    @include outline-focus;
  }

  &__mark {
    border: $border-width-base solid var(--border-field-color);
    background-color: var(--bg-field-color);
    border-radius: $border-radius-md;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    position: relative;
    cursor: inherit;

    &::after {
      content: "";
      display: block;
      border: solid var(--color-primary);
      transform: rotate(45deg);
      opacity: 0;
      transition: opacity 0.2s ease;
    }

    // Tamaño dinámico para la marca (aspa) según el tamaño del componente
    @each $key, $size in $checkbox-box-sizes {
      &--#{$key} {
        height: $size;
        width: $size;

        &::after {
          // Tamaño del aspa en proporción a la caja
          $mark-width: $size * 0.15; // 15% del tamaño del checkbox
          $mark-height: $size * 0.5; // 50% del tamaño del checkbox
          $border-thickness: $size * 0.15; // 15% del tamaño del checkbox

          width: $mark-width;
          height: $mark-height;
          border-width: 0 $border-thickness $border-thickness 0;
        }
      }
    }
  }

  &--checked &__mark::after {
    opacity: 1;
  }

  &--indeterminate &__mark {
    &::after {
      transform: rotate(0deg);
      background-color: var(--color-primary);
      border: none;
      opacity: 1;
      margin-top: 1px;
    }

    // Tamaño para la línea de indeterminación
    @each $key, $size in $checkbox-box-sizes {
      &--#{$key} {
        height: $size;
        width: $size;

        &::after {
          // Tamaño del aspa en proporción a la caja
          $mark-width: $size * 0.55; // 55% del tamaño del checkbox
          $mark-height: $size * 0.2; // 20% del tamaño del checkbox

          width: $mark-width;
          height: $mark-height;
        }
      }
    }
  }

  // Tamaño dinámico para el checkbox según el tamaño del componente
  @each $size-key, $checbox-size in $checkbox-box-sizes {
    &--#{$size-key} &__mark {
      @include component-checkbox-size($size-key);
    }
  }

  &__label {
    color: var(--color-gray-700);
    margin: 0 !important;
    padding-left: $spacing-xs;
    cursor: pointer;

    // Tamaño dinámico para la fuente según el tamaño del componente
    @each $size-key, $font-size in $component-font-sizes {
      &--#{$size-key} {
        font-size: map-get($component-font-sizes, $size-key);
        line-height: map-get($component-font-sizes, $size-key);
      }
    }
  }
}
