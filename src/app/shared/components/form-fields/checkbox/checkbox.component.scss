@import "config";
@import "mixins";

:host {
  @include flex-col-start;
}

.neo-checkbox {
  display: inline-flex;
  align-items: center;
  user-select: none;
  cursor: pointer;
  @include transition(opacity 0.2s ease);
  color: var(--color-text);

  &--disabled {
    cursor: default;
    opacity: 0.6;
    .neo-checkbox__label {
      cursor: default;
    }
  }

  &:hover:not(&--disabled) {
    .neo-checkbox__mark {
      border-color: var(--hover-border-field-color);
    }
  }

  &__input {
    position: absolute;
    opacity: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    border: 0;
    padding: 0;
    clip: rect(0 0 0 0);
    overflow: hidden;
    white-space: nowrap;
  }

  &__input:focus:not([disabled]) ~ &__mark,
  &__input:focus-visible:not([disabled]) ~ &__mark,
  &__input:active:not([disabled]) ~ &__mark {
    @include outline-focus;
  }

  &__mark {
    border: var(--border-width-base) solid var(--border-field-color);
    background-color: var(--bg-field-color);
    border-radius: var(--border-radius-md);
    @include flex-inline-center;
    @include transition(all 0.2s ease);
    position: relative;
    cursor: inherit;

    &:hover:not(&--disabled) {
      border-color: var(--hover-border-field-color);
    }

    &::after {
      content: "";
      display: block;
      border: solid var(--color-primary);
      transform: rotate(45deg);
      opacity: 0;
      transition: opacity 0.2s ease;
    }

    // Tamaño dinámico para la marca (aspa) según el tamaño del componente
    @each $key, $size in $checkbox-box-sizes {
      &--#{$key} {
        height: var(--checkbox-box-size-#{$key});
        width: var(--checkbox-box-size-#{$key});

        &::after {
          // Tamaño del aspa en proporción a la caja
          width: calc(var(--checkbox-box-size-#{$key}) * 0.15);
          height: calc(var(--checkbox-box-size-#{$key}) * 0.5);
          border-width: 0
            calc(var(--checkbox-box-size-#{$key}) * 0.15)
            calc(var(--checkbox-box-size-#{$key}) * 0.15)
            0;
        }
      }
    }
  }

  &--checked &__mark::after {
    opacity: 1;
  }

  &--indeterminate &__mark {
    &::after {
      transform: rotate(0deg);
      background-color: var(--color-primary);
      border: none;
      opacity: 1;
      margin-top: 1px;
    }

    // Tamaño para la línea de indeterminación
    @each $key, $size in $checkbox-box-sizes {
      &--#{$key} {
        height: var(--checkbox-box-size-#{$key});
        width: var(--checkbox-box-size-#{$key});

        &::after {
          // Tamaño del aspa en proporción a la caja
          width: calc(var(--checkbox-box-size-#{$key}) * 0.55);
          height: calc(var(--checkbox-box-size-#{$key}) * 0.2);
        }
      }
    }
  }

  // Tamaño dinámico para el checkbox según el tamaño del componente
  @each $size-key, $checbox-size in $checkbox-box-sizes {
    &--#{$size-key} &__mark {
      @include component-checkbox-size($size-key);
    }
  }

  &__label {
    color: var(--color-text);
    margin: 0 !important;
    padding-left: var(--spacing-xs);

    // Tamaño dinámico para la fuente según el tamaño del componente
    @each $size-key, $font-size in $component-font-sizes {
      &--#{$size-key} {
        font-size: var(--component-font-size-#{$size-key});
        line-height: var(--component-font-size-#{$size-key});
      }
    }
  }
}
